{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/book-form/book-form.component.ts","./src/app/components/book-list/book-list.component.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/loan-form/loan-form.component.ts","./src/app/components/loan-list/loan-list.component.ts","./src/app/components/login/login.component.ts","./src/app/components/member-form/member-form.component.ts","./src/app/components/member-list/member-list.component.ts","./src/app/components/register/register.component.ts","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/book.service.ts","./src/app/services/loan.service.ts","./src/app/services/member.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { BookListComponent } from './components/book-list/book-list.component';\r\nimport { BookFormComponent } from './components/book-form/book-form.component';\r\nimport { MemberListComponent } from './components/member-list/member-list.component';\r\nimport { MemberFormComponent } from './components/member-form/member-form.component';\r\nimport { LoanListComponent } from './components/loan-list/loan-list.component';\r\nimport { LoanFormComponent } from './components/loan-form/loan-form.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'books', component: BookListComponent, canActivate: [AuthGuard] },\r\n  { path: 'books/new', component: BookFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'books/edit/:id', component: BookFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'members', component: MemberListComponent, canActivate: [AuthGuard] },\r\n  { path: 'members/new', component: MemberFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'members/edit/:id', component: MemberFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'loans', component: LoanListComponent, canActivate: [AuthGuard] },\r\n  { path: 'loans/new', component: LoanFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'loans/edit/:id', component: LoanFormComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: '/dashboard' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<!DOCTYPE html>\r\n<div class=\"app-container\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" href=\"#\">{{title}}</a>\r\n      <div class=\"navbar-nav ms-auto\" *ngIf=\"authService.isAuthenticated()\">\r\n        <button class=\"btn btn-outline-light\" (click)=\"logout()\">Logout</button>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <div class=\"container-fluid mt-4\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Library Management System';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n// Components\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { BookListComponent } from './components/book-list/book-list.component';\r\nimport { BookFormComponent } from './components/book-form/book-form.component';\r\nimport { MemberListComponent } from './components/member-list/member-list.component';\r\nimport { MemberFormComponent } from './components/member-form/member-form.component';\r\nimport { LoanListComponent } from './components/loan-list/loan-list.component';\r\nimport { LoanFormComponent } from './components/loan-form/loan-form.component';\r\n\r\n// Services\r\nimport { AuthService } from './services/auth.service';\r\nimport { BookService } from './services/book.service';\r\nimport { MemberService } from './services/member.service';\r\nimport { LoanService } from './services/loan.service';\r\n\r\n// Guards\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    BookListComponent,\r\n    BookFormComponent,\r\n    MemberListComponent,\r\n    MemberFormComponent,\r\n    LoanListComponent,\r\n    LoanFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    BookService,\r\n    MemberService,\r\n    LoanService,\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-book-form',\r\n  template: `<div class=\"container\"><h2>Book Form</h2><p>Book form functionality will be implemented here.</p></div>`\r\n})\r\nexport class BookFormComponent {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BookService, Book } from '../../services/book.service';\r\n\r\n@Component({\r\n  selector: 'app-book-list',\r\n  template: `\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2><i class=\"bi bi-book\"></i> Books Management</h2>\r\n            <button class=\"btn btn-success\" (click)=\"openAddForm()\">\r\n              <i class=\"bi bi-plus-circle\"></i> Add New Book\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Search and Filter -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-md-6\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search books...\" \r\n                 [(ngModel)]=\"searchTerm\" (input)=\"filterBooks()\">\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <select class=\"form-control\" [(ngModel)]=\"statusFilter\" (change)=\"filterBooks()\">\r\n            <option value=\"\">All Status</option>\r\n            <option value=\"AVAILABLE\">Available</option>\r\n            <option value=\"ISSUED\">Issued</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <p class=\"mt-2\">Loading books...</p>\r\n      </div>\r\n\r\n      <!-- Books Table -->\r\n      <div *ngIf=\"!isLoading\" class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">Books List ({{ filteredBooks.length }} books)</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"filteredBooks.length === 0\" class=\"text-center py-4\">\r\n            <i class=\"bi bi-book-fill display-4 text-muted\"></i>\r\n            <h5 class=\"text-muted mt-3\">No books found</h5>\r\n            <p class=\"text-muted\">{{ searchTerm || statusFilter ? 'No books match your search criteria.' : 'Start by adding your first book!' }}</p>\r\n            <button class=\"btn btn-primary\" (click)=\"openAddForm()\">Add First Book</button>\r\n          </div>\r\n\r\n          <div *ngIf=\"filteredBooks.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead class=\"table-dark\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Title</th>\r\n                  <th>Author</th>\r\n                  <th>Published Date</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let book of filteredBooks; let i = index\">\r\n                  <td>{{ i + 1 }}</td>\r\n                  <td>\r\n                    <strong>{{ book.title }}</strong>\r\n                  </td>\r\n                  <td>{{ book.author }}</td>\r\n                  <td>{{ book.publishedDate | date:'mediumDate' }}</td>\r\n                  <td>\r\n                    <span class=\"badge\" [ngClass]=\"getStatusClass(book.status)\">\r\n                      {{ book.status || 'AVAILABLE' }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <button class=\"btn btn-outline-primary\" (click)=\"editBook(book)\" \r\n                              title=\"Edit Book\">\r\n                        <i class=\"bi bi-pencil\"></i>\r\n                      </button>\r\n                      <button class=\"btn btn-outline-danger\" (click)=\"deleteBook(book)\" \r\n                              title=\"Delete Book\" [disabled]=\"book.status === 'ISSUED'\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Add/Edit Form Modal -->\r\n      <div *ngIf=\"showForm\" class=\"modal d-block\" style=\"background-color: rgba(0,0,0,0.5);\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">{{ isEditMode ? 'Edit Book' : 'Add New Book' }}</h5>\r\n              <button type=\"button\" class=\"btn-close\" (click)=\"closeForm()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form (ngSubmit)=\"saveBook()\">\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Title *</label>\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentBook.title\" \r\n                         name=\"title\" required placeholder=\"Enter book title\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Author *</label>\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentBook.author\" \r\n                         name=\"author\" required placeholder=\"Enter author name\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Published Date</label>\r\n                  <input type=\"date\" class=\"form-control\" [(ngModel)]=\"publishedDateString\" \r\n                         name=\"publishedDate\">\r\n                </div>\r\n                <div class=\"d-flex justify-content-end\">\r\n                  <button type=\"button\" class=\"btn btn-secondary me-2\" (click)=\"closeForm()\">Cancel</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!currentBook.title || !currentBook.author || isSubmitting\">\r\n                    <span *ngIf=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                    {{ isEditMode ? 'Update' : 'Add' }} Book\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error/Success Messages -->\r\n      <div *ngIf=\"message\" class=\"alert\" [ngClass]=\"messageType === 'success' ? 'alert-success' : 'alert-danger'\" class=\"mt-3\">\r\n        <i class=\"bi\" [ngClass]=\"messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle'\"></i>\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .table th {\r\n      border-top: none;\r\n    }\r\n    .btn-group-sm > .btn {\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n    .modal {\r\n      z-index: 1050;\r\n    }\r\n    .badge {\r\n      font-size: 0.8em;\r\n    }\r\n  `]\r\n})\r\nexport class BookListComponent implements OnInit {\r\n  books: Book[] = [];\r\n  filteredBooks: Book[] = [];\r\n  currentBook: Book = { title: '', author: '' };\r\n  showForm = false;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  isSubmitting = false;\r\n  searchTerm = '';\r\n  statusFilter = '';\r\n  message = '';\r\n  messageType: 'success' | 'error' = 'success';\r\n  publishedDateString = '';\r\n\r\n  constructor(private bookService: BookService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks() {\r\n    this.isLoading = true;\r\n    this.bookService.getAllBooks().subscribe({\r\n      next: (books) => {\r\n        this.books = books;\r\n        this.filterBooks();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading books:', error);\r\n        this.showMessage('Failed to load books. Please try again.', 'error');\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterBooks() {\r\n    this.filteredBooks = this.books.filter(book => {\r\n      const matchesSearch = !this.searchTerm || \r\n        book.title.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        book.author.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      \r\n      const matchesStatus = !this.statusFilter || \r\n        (book.status || 'AVAILABLE') === this.statusFilter;\r\n      \r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }\r\n\r\n  openAddForm() {\r\n    this.currentBook = { title: '', author: '' };\r\n    this.publishedDateString = '';\r\n    this.isEditMode = false;\r\n    this.showForm = true;\r\n    this.clearMessage();\r\n  }\r\n\r\n  editBook(book: Book) {\r\n    this.currentBook = { ...book };\r\n    this.publishedDateString = book.publishedDate ? \r\n      new Date(book.publishedDate).toISOString().split('T')[0] : '';\r\n    this.isEditMode = true;\r\n    this.showForm = true;\r\n    this.clearMessage();\r\n  }\r\n\r\n  closeForm() {\r\n    this.showForm = false;\r\n    this.currentBook = { title: '', author: '' };\r\n    this.publishedDateString = '';\r\n    this.clearMessage();\r\n  }\r\n\r\n  saveBook() {\r\n    if (!this.currentBook.title || !this.currentBook.author) {\r\n      this.showMessage('Please fill in all required fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n    \r\n    // Convert date string to Date object\r\n    if (this.publishedDateString) {\r\n      this.currentBook.publishedDate = new Date(this.publishedDateString);\r\n    }\r\n\r\n    const operation = this.isEditMode ? \r\n      this.bookService.updateBook(this.currentBook.id!, this.currentBook) :\r\n      this.bookService.createBook(this.currentBook);\r\n\r\n    operation.subscribe({\r\n      next: (book) => {\r\n        this.showMessage(\r\n          this.isEditMode ? 'Book updated successfully!' : 'Book added successfully!', \r\n          'success'\r\n        );\r\n        this.closeForm();\r\n        this.loadBooks();\r\n        this.isSubmitting = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving book:', error);\r\n        this.showMessage('Failed to save book. Please try again.', 'error');\r\n        this.isSubmitting = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteBook(book: Book) {\r\n    if (book.status === 'ISSUED') {\r\n      this.showMessage('Cannot delete a book that is currently issued.', 'error');\r\n      return;\r\n    }\r\n\r\n    if (confirm(`Are you sure you want to delete \"${book.title}\"?`)) {\r\n      this.bookService.deleteBook(book.id!).subscribe({\r\n        next: () => {\r\n          this.showMessage('Book deleted successfully!', 'success');\r\n          this.loadBooks();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting book:', error);\r\n          this.showMessage('Failed to delete book. Please try again.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getStatusClass(status: string | undefined): string {\r\n    switch (status) {\r\n      case 'AVAILABLE': return 'bg-success';\r\n      case 'ISSUED': return 'bg-warning text-dark';\r\n      default: return 'bg-success';\r\n    }\r\n  }\r\n\r\n  showMessage(message: string, type: 'success' | 'error') {\r\n    this.message = message;\r\n    this.messageType = type;\r\n    setTimeout(() => {\r\n      this.clearMessage();\r\n    }, 5000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.message = '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  template: `\r\n    <div class=\"container mt-4\">\r\n      <!-- Header -->\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-12\">\r\n          <div class=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h1 class=\"display-6\">📚 Library Management System</h1>\r\n              <p class=\"lead text-muted\">Welcome back, {{ currentUser?.username || 'User' }}!</p>\r\n            </div>\r\n            <div>\r\n              <button class=\"btn btn-outline-danger\" (click)=\"logout()\">\r\n                <i class=\"bi bi-box-arrow-right\"></i> Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Stats Cards -->\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-md-4\">\r\n          <div class=\"card bg-primary text-white\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <h4>📖 Books</h4>\r\n                  <p class=\"card-text\">Manage your library collection</p>\r\n                </div>\r\n                <div class=\"align-self-center\">\r\n                  <i class=\"bi bi-book-fill display-4 opacity-50\"></i>\r\n                </div>\r\n              </div>\r\n              <a routerLink=\"/books\" class=\"btn btn-light btn-sm mt-2\">\r\n                <i class=\"bi bi-arrow-right\"></i> Manage Books\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"card bg-success text-white\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <h4>👥 Members</h4>\r\n                  <p class=\"card-text\">Manage library members</p>\r\n                </div>\r\n                <div class=\"align-self-center\">\r\n                  <i class=\"bi bi-people-fill display-4 opacity-50\"></i>\r\n                </div>\r\n              </div>\r\n              <a routerLink=\"/members\" class=\"btn btn-light btn-sm mt-2\">\r\n                <i class=\"bi bi-arrow-right\"></i> Manage Members\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <div class=\"card bg-warning text-dark\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <h4>📋 Loans</h4>\r\n                  <p class=\"card-text\">Track book loans & returns</p>\r\n                </div>\r\n                <div class=\"align-self-center\">\r\n                  <i class=\"bi bi-journal-bookmark-fill display-4 opacity-50\"></i>\r\n                </div>\r\n              </div>\r\n              <a routerLink=\"/loans\" class=\"btn btn-dark btn-sm mt-2\">\r\n                <i class=\"bi bi-arrow-right\"></i> Manage Loans\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Features Overview -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"mb-0\">✨ Available Features</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <h6><i class=\"bi bi-book text-primary\"></i> Book Management</h6>\r\n                  <ul class=\"list-unstyled ms-3\">\r\n                    <li>✅ Add, edit, and delete books</li>\r\n                    <li>✅ Search and filter books</li>\r\n                    <li>✅ Track book availability status</li>\r\n                  </ul>\r\n\r\n                  <h6><i class=\"bi bi-people text-success\"></i> Member Management</h6>\r\n                  <ul class=\"list-unstyled ms-3\">\r\n                    <li>✅ Add and manage library members</li>\r\n                    <li>✅ Search members by name or email</li>\r\n                    <li>✅ View member details and roles</li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <h6><i class=\"bi bi-journal-bookmark text-warning\"></i> Loan Management</h6>\r\n                  <ul class=\"list-unstyled ms-3\">\r\n                    <li>✅ Issue books to members</li>\r\n                    <li>✅ Track loan status (Borrowed, Returned, Late)</li>\r\n                    <li>✅ Monitor due dates and overdue books</li>\r\n                    <li>✅ Process book returns</li>\r\n                  </ul>\r\n\r\n                  <h6><i class=\"bi bi-shield-check text-info\"></i> Security Features</h6>\r\n                  <ul class=\"list-unstyled ms-3\">\r\n                    <li>✅ User authentication (Minimal Security)</li>\r\n                    <li>✅ Session management</li>\r\n                    <li>✅ Role-based access</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n      <div class=\"row mt-4\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card border-primary\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h5 class=\"mb-0\">🚀 Quick Actions</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <a routerLink=\"/books\" class=\"btn btn-outline-primary w-100 mb-2\">\r\n                    <i class=\"bi bi-plus-circle\"></i><br>Add New Book\r\n                  </a>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <a routerLink=\"/members\" class=\"btn btn-outline-success w-100 mb-2\">\r\n                    <i class=\"bi bi-person-plus\"></i><br>Add New Member\r\n                  </a>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <a routerLink=\"/loans\" class=\"btn btn-outline-warning w-100 mb-2\">\r\n                    <i class=\"bi bi-journal-plus\"></i><br>Issue New Book\r\n                  </a>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <a routerLink=\"/loans\" class=\"btn btn-outline-info w-100 mb-2\">\r\n                    <i class=\"bi bi-list-check\"></i><br>View All Loans\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .card {\r\n      margin-bottom: 20px;\r\n      transition: transform 0.2s;\r\n    }\r\n    .card:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n    .display-6 {\r\n      font-weight: 600;\r\n    }\r\n    .opacity-50 {\r\n      opacity: 0.5;\r\n    }\r\n  `]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  currentUser: any;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loan-form',\r\n  template: `<div class=\"container\"><h2>Loan Form</h2><p>Loan form functionality will be implemented here.</p></div>`\r\n})\r\nexport class LoanFormComponent {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoanService, Loan } from '../../services/loan.service';\r\nimport { BookService, Book } from '../../services/book.service';\r\nimport { MemberService, Member } from '../../services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-list',\r\n  template: `\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2><i class=\"bi bi-journal-bookmark\"></i> Loans Management</h2>\r\n            <button class=\"btn btn-success\" (click)=\"openAddForm()\">\r\n              <i class=\"bi bi-plus-circle\"></i> Issue New Book\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Status Filter -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-md-6\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search by book title or member name...\" \r\n                 [(ngModel)]=\"searchTerm\" (input)=\"filterLoans()\">\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <select class=\"form-control\" [(ngModel)]=\"statusFilter\" (change)=\"filterLoans()\">\r\n            <option value=\"\">All Status</option>\r\n            <option value=\"BORROWED\">Borrowed</option>\r\n            <option value=\"RETURNED\">Returned</option>\r\n            <option value=\"LATE\">Late</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <p class=\"mt-2\">Loading loans...</p>\r\n      </div>\r\n\r\n      <!-- Loans Table -->\r\n      <div *ngIf=\"!isLoading\" class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">Loans List ({{ filteredLoans.length }} loans)</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"filteredLoans.length === 0\" class=\"text-center py-4\">\r\n            <i class=\"bi bi-journal-bookmark-fill display-4 text-muted\"></i>\r\n            <h5 class=\"text-muted mt-3\">No loans found</h5>\r\n            <p class=\"text-muted\">{{ searchTerm || statusFilter ? 'No loans match your criteria.' : 'No books have been issued yet!' }}</p>\r\n            <button class=\"btn btn-primary\" (click)=\"openAddForm()\">Issue First Book</button>\r\n          </div>\r\n\r\n          <div *ngIf=\"filteredLoans.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead class=\"table-dark\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Book</th>\r\n                  <th>Member</th>\r\n                  <th>Loan Date</th>\r\n                  <th>Due Date</th>\r\n                  <th>Return Date</th>\r\n                  <th>Status</th>\r\n                  <th>Days Left</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let loan of filteredLoans; let i = index\">\r\n                  <td>{{ i + 1 }}</td>\r\n                  <td>\r\n                    <strong>{{ loan.book && loan.book.title ? loan.book.title : 'Unknown Book' }}</strong>\r\n                    <br><small class=\"text-muted\">by {{ loan.book && loan.book.author ? loan.book.author : 'Unknown Author' }}</small>\r\n                  </td>\r\n                  <td>\r\n                    <strong>{{ loan.member && loan.member.name ? loan.member.name : 'Unknown Member' }}</strong>\r\n                    <br><small class=\"text-muted\">{{ loan.member && loan.member.email ? loan.member.email : 'No email' }}</small>\r\n                  </td>\r\n                  <td>{{ loan.loanDate | date:'shortDate' }}</td>\r\n                  <td>{{ loan.dueDate | date:'shortDate' }}</td>\r\n                  <td>\r\n                    <span *ngIf=\"loan.returnDate\">{{ loan.returnDate | date:'shortDate' }}</span>\r\n                    <span *ngIf=\"!loan.returnDate\" class=\"text-muted\">Not returned</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"badge\" [ngClass]=\"getStatusClass(loan.status)\">\r\n                      {{ loan.status }}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span *ngIf=\"loan.status === 'BORROWED'\" [ngClass]=\"getDaysLeftClass(loan)\">\r\n                      {{ getDaysLeft(loan) }}\r\n                    </span>\r\n                    <span *ngIf=\"loan.status !== 'BORROWED'\" class=\"text-muted\">-</span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <button *ngIf=\"loan.status === 'BORROWED'\" \r\n                              class=\"btn btn-outline-success\" \r\n                              (click)=\"returnBook(loan)\" \r\n                              title=\"Return Book\">\r\n                        <i class=\"bi bi-check-circle\"></i> Return\r\n                      </button>\r\n                      <button class=\"btn btn-outline-danger\" \r\n                              (click)=\"deleteLoan(loan)\" \r\n                              title=\"Delete Loan Record\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Add Loan Form Modal -->\r\n      <div *ngIf=\"showForm\" class=\"modal d-block\" style=\"background-color: rgba(0,0,0,0.5);\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Issue New Book</h5>\r\n              <button type=\"button\" class=\"btn-close\" (click)=\"closeForm()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form (ngSubmit)=\"saveLoan()\">\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Book *</label>\r\n                  <select class=\"form-control\" [(ngModel)]=\"newLoan.bookId\" name=\"bookId\" required>\r\n                    <option value=\"\">Select a book</option>\r\n                    <option *ngFor=\"let book of availableBooks\" [value]=\"book.id\">\r\n                      {{ book.title }} by {{ book.author }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Member *</label>\r\n                  <select class=\"form-control\" [(ngModel)]=\"newLoan.memberId\" name=\"memberId\" required>\r\n                    <option value=\"\">Select a member</option>\r\n                    <option *ngFor=\"let member of members\" [value]=\"member.id\">\r\n                      {{ member.name }} ({{ member.email }})\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Due Date *</label>\r\n                  <input type=\"date\" class=\"form-control\" [(ngModel)]=\"dueDateString\" \r\n                         name=\"dueDate\" required [min]=\"minDate\">\r\n                </div>\r\n                <div class=\"d-flex justify-content-end\">\r\n                  <button type=\"button\" class=\"btn btn-secondary me-2\" (click)=\"closeForm()\">Cancel</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!newLoan.bookId || !newLoan.memberId || !dueDateString || isSubmitting\">\r\n                    <span *ngIf=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                    Issue Book\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error/Success Messages -->\r\n      <div *ngIf=\"message\" class=\"alert\" [ngClass]=\"messageType === 'success' ? 'alert-success' : 'alert-danger'\" class=\"mt-3\">\r\n        <i class=\"bi\" [ngClass]=\"messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle'\"></i>\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .table th {\r\n      border-top: none;\r\n    }\r\n    .btn-group-sm > .btn {\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n    .modal {\r\n      z-index: 1050;\r\n    }\r\n    .badge {\r\n      font-size: 0.8em;\r\n    }\r\n    .text-danger {\r\n      font-weight: bold;\r\n    }\r\n    .text-warning {\r\n      font-weight: bold;\r\n    }\r\n  `]\r\n})\r\nexport class LoanListComponent implements OnInit {\r\n  loans: Loan[] = [];\r\n  filteredLoans: Loan[] = [];\r\n  availableBooks: Book[] = [];\r\n  members: Member[] = [];\r\n  newLoan = { bookId: '', memberId: '' };\r\n  showForm = false;\r\n  isLoading = false;\r\n  isSubmitting = false;\r\n  searchTerm = '';\r\n  statusFilter = '';\r\n  message = '';\r\n  messageType: 'success' | 'error' = 'success';\r\n  dueDateString = '';\r\n  minDate = '';\r\n\r\n  constructor(\r\n    private loanService: LoanService,\r\n    private bookService: BookService,\r\n    private memberService: MemberService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.setMinDate();\r\n    this.loadLoans();\r\n    this.loadMembers();\r\n    this.loadAvailableBooks();\r\n  }\r\n\r\n  setMinDate() {\r\n    const today = new Date();\r\n    this.minDate = today.toISOString().split('T')[0];\r\n    // Set default due date to 14 days from today\r\n    const defaultDue = new Date();\r\n    defaultDue.setDate(today.getDate() + 14);\r\n    this.dueDateString = defaultDue.toISOString().split('T')[0];\r\n  }\r\n\r\n  loadLoans() {\r\n    this.isLoading = true;\r\n    this.loanService.getAllLoans().subscribe({\r\n      next: (loans) => {\r\n        this.loans = loans;\r\n        this.filterLoans();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading loans:', error);\r\n        this.showMessage('Failed to load loans. Please try again.', 'error');\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAvailableBooks() {\r\n    this.bookService.getAllBooks().subscribe({\r\n      next: (books) => {\r\n        this.availableBooks = books.filter(book => book.status !== 'ISSUED');\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading books:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadMembers() {\r\n    this.memberService.getAllMembers().subscribe({\r\n      next: (members) => {\r\n        this.members = members;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading members:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  filterLoans() {\r\n    this.filteredLoans = this.loans.filter(loan => {\r\n      const bookTitle = loan.book && loan.book.title ? loan.book.title.toLowerCase() : '';\r\n      const memberName = loan.member && loan.member.name ? loan.member.name.toLowerCase() : '';\r\n      \r\n      const matchesSearch = !this.searchTerm || \r\n        bookTitle.includes(this.searchTerm.toLowerCase()) ||\r\n        memberName.includes(this.searchTerm.toLowerCase());\r\n      \r\n      const matchesStatus = !this.statusFilter || loan.status === this.statusFilter;\r\n      \r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }\r\n\r\n  openAddForm() {\r\n    this.newLoan = { bookId: '', memberId: '' };\r\n    this.setMinDate();\r\n    this.showForm = true;\r\n    this.clearMessage();\r\n  }\r\n\r\n  closeForm() {\r\n    this.showForm = false;\r\n    this.newLoan = { bookId: '', memberId: '' };\r\n    this.clearMessage();\r\n  }\r\n\r\n  saveLoan() {\r\n    if (!this.newLoan.bookId || !this.newLoan.memberId || !this.dueDateString) {\r\n      this.showMessage('Please fill in all required fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n\r\n    const loanData = {\r\n      bookId: parseInt(this.newLoan.bookId),\r\n      memberId: parseInt(this.newLoan.memberId),\r\n      dueDate: this.dueDateString\r\n    };\r\n\r\n    this.loanService.createLoan(loanData).subscribe({\r\n      next: (loan) => {\r\n        this.showMessage('Book issued successfully!', 'success');\r\n        this.closeForm();\r\n        this.loadLoans();\r\n        this.loadAvailableBooks(); // Refresh available books\r\n        this.isSubmitting = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error issuing book:', error);\r\n        this.showMessage('Failed to issue book. Please try again.', 'error');\r\n        this.isSubmitting = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  returnBook(loan: Loan) {\r\n    const bookTitle = loan.book && loan.book.title ? loan.book.title : 'this book';\r\n    const memberName = loan.member && loan.member.name ? loan.member.name : 'this member';\r\n    if (confirm(`Return \"${bookTitle}\" borrowed by ${memberName}?`)) {\r\n      this.loanService.returnBook(loan.id!).subscribe({\r\n        next: () => {\r\n          this.showMessage('Book returned successfully!', 'success');\r\n          this.loadLoans();\r\n          this.loadAvailableBooks(); // Refresh available books\r\n        },\r\n        error: (error) => {\r\n          console.error('Error returning book:', error);\r\n          this.showMessage('Failed to return book. Please try again.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteLoan(loan: Loan) {\r\n    const bookTitle = loan.book && loan.book.title ? loan.book.title : 'this book';\r\n    if (confirm(`Delete loan record for \"${bookTitle}\"?`)) {\r\n      this.loanService.deleteLoan(loan.id!).subscribe({\r\n        next: () => {\r\n          this.showMessage('Loan record deleted successfully!', 'success');\r\n          this.loadLoans();\r\n          this.loadAvailableBooks(); // Refresh available books\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting loan:', error);\r\n          this.showMessage('Failed to delete loan record. Please try again.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status) {\r\n      case 'BORROWED': return 'bg-primary';\r\n      case 'RETURNED': return 'bg-success';\r\n      case 'LATE': return 'bg-danger';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n\r\n  getDaysLeft(loan: Loan): string {\r\n    const today = new Date();\r\n    const dueDate = new Date(loan.dueDate);\r\n    const diffTime = dueDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays < 0) {\r\n      return `${Math.abs(diffDays)} days overdue`;\r\n    } else if (diffDays === 0) {\r\n      return 'Due today';\r\n    } else {\r\n      return `${diffDays} days left`;\r\n    }\r\n  }\r\n\r\n  getDaysLeftClass(loan: Loan): string {\r\n    const today = new Date();\r\n    const dueDate = new Date(loan.dueDate);\r\n    const diffTime = dueDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays < 0) {\r\n      return 'text-danger';\r\n    } else if (diffDays <= 3) {\r\n      return 'text-warning';\r\n    } else {\r\n      return 'text-success';\r\n    }\r\n  }\r\n\r\n  showMessage(message: string, type: 'success' | 'error') {\r\n    this.message = message;\r\n    this.messageType = type;\r\n    setTimeout(() => {\r\n      this.clearMessage();\r\n    }, 5000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.message = '';\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <h2>📚 Library Login</h2>\r\n          <div class=\"card p-4\">\r\n            <form (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"username\" \r\n                       [(ngModel)]=\"credentials.username\" name=\"username\" \r\n                       placeholder=\"Enter username (admin or user)\">\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" \r\n                       [(ngModel)]=\"credentials.password\" name=\"password\"\r\n                       placeholder=\"Enter password\">\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary w-100 mb-3\" [disabled]=\"isLoading\">\r\n                <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                {{ isLoading ? 'Logging in...' : 'Login' }}\r\n              </button>\r\n              <div class=\"text-center\">\r\n                <small class=\"text-muted\">Test credentials: admin/admin123 or user/user123</small>\r\n              </div>\r\n              <div class=\"text-center mt-3\">\r\n                <a routerLink=\"/register\" class=\"text-decoration-none\">Don't have an account? Register here</a>\r\n              </div>\r\n            </form>\r\n            <div *ngIf=\"errorMessage\" class=\"alert alert-warning mt-3\">\r\n              <i class=\"bi bi-exclamation-triangle\"></i> {{ errorMessage }}\r\n            </div>\r\n            <div *ngIf=\"successMessage\" class=\"alert alert-success mt-3\">\r\n              <i class=\"bi bi-check-circle\"></i> {{ successMessage }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      max-width: 600px;\r\n      margin-top: 100px;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  credentials = { username: '', password: '' };\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  isLoading = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  onSubmit() {\r\n    // Clear previous messages\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n    \r\n    // Basic validation - only check if fields are not empty\r\n    if (!this.credentials.username || !this.credentials.password) {\r\n      this.errorMessage = 'Please enter both username and password.';\r\n      return;\r\n    }\r\n    \r\n    this.isLoading = true;\r\n    \r\n    this.authService.login(this.credentials).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        if (response.success) {\r\n          this.authService.setAuthData(response);\r\n          this.successMessage = 'Login successful! Redirecting...';\r\n          setTimeout(() => {\r\n            this.router.navigate(['/dashboard']);\r\n          }, 1000);\r\n        } else {\r\n          this.errorMessage = 'Login failed. Please check your credentials.';\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Login error:', error);\r\n        this.errorMessage = 'Login failed. Please try again or use test credentials.';\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-member-form',\r\n  template: `<div class=\"container\"><h2>Member Form</h2><p>Member form functionality will be implemented here.</p></div>`\r\n})\r\nexport class MemberFormComponent {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MemberService, Member } from '../../services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  template: `\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2><i class=\"bi bi-people\"></i> Members Management</h2>\r\n            <button class=\"btn btn-success\" (click)=\"openAddForm()\">\r\n              <i class=\"bi bi-person-plus\"></i> Add New Member\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Search -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-md-8\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search members by name or email...\" \r\n                 [(ngModel)]=\"searchTerm\" (input)=\"filterMembers()\">\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div *ngIf=\"isLoading\" class=\"text-center py-4\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <p class=\"mt-2\">Loading members...</p>\r\n      </div>\r\n\r\n      <!-- Members Table -->\r\n      <div *ngIf=\"!isLoading\" class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"mb-0\">Members List ({{ filteredMembers.length }} members)</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"filteredMembers.length === 0\" class=\"text-center py-4\">\r\n            <i class=\"bi bi-people-fill display-4 text-muted\"></i>\r\n            <h5 class=\"text-muted mt-3\">No members found</h5>\r\n            <p class=\"text-muted\">{{ searchTerm ? 'No members match your search criteria.' : 'Start by adding your first member!' }}</p>\r\n            <button class=\"btn btn-primary\" (click)=\"openAddForm()\">Add First Member</button>\r\n          </div>\r\n\r\n          <div *ngIf=\"filteredMembers.length > 0\" class=\"table-responsive\">\r\n            <table class=\"table table-hover\">\r\n              <thead class=\"table-dark\">\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Roles</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let member of filteredMembers; let i = index\">\r\n                  <td>{{ i + 1 }}</td>\r\n                  <td>\r\n                    <strong>{{ member.name }}</strong>\r\n                  </td>\r\n                  <td>{{ member.email }}</td>\r\n                  <td>\r\n                    <span *ngFor=\"let role of member.roles\" class=\"badge bg-secondary me-1\">\r\n                      {{ role.name || role }}\r\n                    </span>\r\n                    <span *ngIf=\"!member.roles || member.roles.length === 0\" class=\"text-muted\">No roles</span>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\r\n                      <button class=\"btn btn-outline-primary\" (click)=\"editMember(member)\" \r\n                              title=\"Edit Member\">\r\n                        <i class=\"bi bi-pencil\"></i>\r\n                      </button>\r\n                      <button class=\"btn btn-outline-danger\" (click)=\"deleteMember(member)\" \r\n                              title=\"Delete Member\">\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Add/Edit Form Modal -->\r\n      <div *ngIf=\"showForm\" class=\"modal d-block\" style=\"background-color: rgba(0,0,0,0.5);\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">{{ isEditMode ? 'Edit Member' : 'Add New Member' }}</h5>\r\n              <button type=\"button\" class=\"btn-close\" (click)=\"closeForm()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form (ngSubmit)=\"saveMember()\">\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Name *</label>\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"currentMember.name\" \r\n                         name=\"name\" required placeholder=\"Enter member name\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Email *</label>\r\n                  <input type=\"email\" class=\"form-control\" [(ngModel)]=\"currentMember.email\" \r\n                         name=\"email\" required placeholder=\"Enter email address\">\r\n                </div>\r\n                <div class=\"d-flex justify-content-end\">\r\n                  <button type=\"button\" class=\"btn btn-secondary me-2\" (click)=\"closeForm()\">Cancel</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!currentMember.name || !currentMember.email || isSubmitting\">\r\n                    <span *ngIf=\"isSubmitting\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                    {{ isEditMode ? 'Update' : 'Add' }} Member\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error/Success Messages -->\r\n      <div *ngIf=\"message\" class=\"alert\" [ngClass]=\"messageType === 'success' ? 'alert-success' : 'alert-danger'\" class=\"mt-3\">\r\n        <i class=\"bi\" [ngClass]=\"messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle'\"></i>\r\n        {{ message }}\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .table th {\r\n      border-top: none;\r\n    }\r\n    .btn-group-sm > .btn {\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n    .modal {\r\n      z-index: 1050;\r\n    }\r\n    .badge {\r\n      font-size: 0.8em;\r\n    }\r\n  `]\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[] = [];\r\n  filteredMembers: Member[] = [];\r\n  currentMember: Member = { name: '', email: '' };\r\n  showForm = false;\r\n  isEditMode = false;\r\n  isLoading = false;\r\n  isSubmitting = false;\r\n  searchTerm = '';\r\n  message = '';\r\n  messageType: 'success' | 'error' = 'success';\r\n\r\n  constructor(private memberService: MemberService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.isLoading = true;\r\n    this.memberService.getAllMembers().subscribe({\r\n      next: (members) => {\r\n        this.members = members;\r\n        this.filterMembers();\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading members:', error);\r\n        this.showMessage('Failed to load members. Please try again.', 'error');\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterMembers() {\r\n    this.filteredMembers = this.members.filter(member => {\r\n      const matchesSearch = !this.searchTerm || \r\n        member.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        member.email.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      \r\n      return matchesSearch;\r\n    });\r\n  }\r\n\r\n  openAddForm() {\r\n    this.currentMember = { name: '', email: '' };\r\n    this.isEditMode = false;\r\n    this.showForm = true;\r\n    this.clearMessage();\r\n  }\r\n\r\n  editMember(member: Member) {\r\n    this.currentMember = { ...member };\r\n    this.isEditMode = true;\r\n    this.showForm = true;\r\n    this.clearMessage();\r\n  }\r\n\r\n  closeForm() {\r\n    this.showForm = false;\r\n    this.currentMember = { name: '', email: '' };\r\n    this.clearMessage();\r\n  }\r\n\r\n  saveMember() {\r\n    if (!this.currentMember.name || !this.currentMember.email) {\r\n      this.showMessage('Please fill in all required fields.', 'error');\r\n      return;\r\n    }\r\n\r\n    // Basic email validation\r\n    if (!this.currentMember.email.includes('@')) {\r\n      this.showMessage('Please enter a valid email address.', 'error');\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n\r\n    const operation = this.isEditMode ? \r\n      this.memberService.updateMember(this.currentMember.id!, this.currentMember) :\r\n      this.memberService.createMember(this.currentMember);\r\n\r\n    operation.subscribe({\r\n      next: (member) => {\r\n        this.showMessage(\r\n          this.isEditMode ? 'Member updated successfully!' : 'Member added successfully!', \r\n          'success'\r\n        );\r\n        this.closeForm();\r\n        this.loadMembers();\r\n        this.isSubmitting = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving member:', error);\r\n        this.showMessage('Failed to save member. Please try again.', 'error');\r\n        this.isSubmitting = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteMember(member: Member) {\r\n    if (confirm(`Are you sure you want to delete \"${member.name}\"?`)) {\r\n      this.memberService.deleteMember(member.id!).subscribe({\r\n        next: () => {\r\n          this.showMessage('Member deleted successfully!', 'success');\r\n          this.loadMembers();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting member:', error);\r\n          this.showMessage('Failed to delete member. Please try again.', 'error');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  showMessage(message: string, type: 'success' | 'error') {\r\n    this.message = message;\r\n    this.messageType = type;\r\n    setTimeout(() => {\r\n      this.clearMessage();\r\n    }, 5000);\r\n  }\r\n\r\n  clearMessage() {\r\n    this.message = '';\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <h2>📝 Register for Library</h2>\r\n          <div class=\"card p-4\">\r\n            <form (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"username\" \r\n                       [(ngModel)]=\"userData.username\" name=\"username\"\r\n                       placeholder=\"Choose a username\">\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"email\" \r\n                       [(ngModel)]=\"userData.email\" name=\"email\"\r\n                       placeholder=\"Enter your email\">\r\n              </div>\r\n              <div class=\"form-group mb-3\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"password\" \r\n                       [(ngModel)]=\"userData.password\" name=\"password\"\r\n                       placeholder=\"Choose a password\">\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success w-100 mb-3\" [disabled]=\"isLoading\">\r\n                <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                {{ isLoading ? 'Creating Account...' : 'Register' }}\r\n              </button>\r\n              <div class=\"text-center\">\r\n                <small class=\"text-muted\">Registration is simplified for demo purposes</small>\r\n              </div>\r\n              <div class=\"text-center mt-3\">\r\n                <a routerLink=\"/login\" class=\"text-decoration-none\">Already have an account? Login here</a>\r\n              </div>\r\n            </form>\r\n            <div *ngIf=\"errorMessage\" class=\"alert alert-warning mt-3\">\r\n              <i class=\"bi bi-exclamation-triangle\"></i> {{ errorMessage }}\r\n            </div>\r\n            <div *ngIf=\"successMessage\" class=\"alert alert-success mt-3\">\r\n              <i class=\"bi bi-check-circle\"></i> {{ successMessage }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      max-width: 600px;\r\n      margin-top: 100px;\r\n    }\r\n  `]\r\n})\r\nexport class RegisterComponent {\r\n  userData = { username: '', email: '', password: '' };\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  isLoading = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  onSubmit() {\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n    \r\n    // Minimal validation - just check if fields are filled\r\n    if (!this.userData.username || !this.userData.email || !this.userData.password) {\r\n      this.errorMessage = 'Please fill in all fields.';\r\n      return;\r\n    }\r\n    \r\n    // Very basic email check - just ensure it contains @\r\n    if (!this.userData.email.includes('@')) {\r\n      this.errorMessage = 'Please enter a valid email address.';\r\n      return;\r\n    }\r\n    \r\n    this.isLoading = true;\r\n    \r\n    this.authService.register(this.userData).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        if (response.success) {\r\n          this.successMessage = 'Registration successful! Redirecting to dashboard...';\r\n          this.authService.setAuthData(response);\r\n          setTimeout(() => {\r\n            this.router.navigate(['/dashboard']);\r\n          }, 2000);\r\n        } else {\r\n          this.errorMessage = 'Registration failed. Please try again.';\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        console.error('Registration error:', error);\r\n        this.errorMessage = 'Registration failed. Please try again.';\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    // Simplified authentication check\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    \r\n    if (isAuthenticated) {\r\n      return true;\r\n    }\r\n    \r\n    // For development - show a friendly message instead of just redirecting\r\n    console.log('Access denied. Please login to continue.');\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { map, catchError, of } from 'rxjs';\r\n\r\nexport interface AuthRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  token?: string;\r\n  user: any;\r\n  success: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private baseUrl = '/api/auth'; // Using relative URL with proxy\r\n  private userKey = 'library_user';\r\n  private isLoggedInKey = 'library_logged_in';\r\n  \r\n  private currentUserSubject = new BehaviorSubject<any>(null);\r\n  public currentUser = this.currentUserSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    // Check if user is already logged in with minimal validation\r\n    const isLoggedIn = localStorage.getItem(this.isLoggedInKey);\r\n    const user = localStorage.getItem(this.userKey);\r\n    if (isLoggedIn === 'true' && user) {\r\n      try {\r\n        this.currentUserSubject.next(JSON.parse(user));\r\n      } catch (e) {\r\n        // If parsing fails, clear the stored data\r\n        this.clearStoredData();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Minimal login with basic error handling\r\n  login(credentials: AuthRequest): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${this.baseUrl}/login`, credentials)\r\n      .pipe(\r\n        map(response => {\r\n          if (response && response.user) {\r\n            return { ...response, success: true };\r\n          }\r\n          return { success: false, user: null };\r\n        }),\r\n        catchError(error => {\r\n          console.error('Login error:', error);\r\n          // Fallback for development - if server is not responding, simulate success with test credentials\r\n          if (error.status === 0 && (credentials.username === 'admin' || credentials.username === 'user')) {\r\n            const mockUser = {\r\n              id: credentials.username === 'admin' ? 1 : 2,\r\n              username: credentials.username,\r\n              email: `${credentials.username}@example.com`,\r\n              roles: credentials.username === 'admin' ? ['ADMIN'] : ['USER']\r\n            };\r\n            return of({ success: true, user: mockUser, token: 'mock-token' });\r\n          }\r\n          return of({ success: false, user: null });\r\n        })\r\n      );\r\n  }\r\n\r\n  // Minimal registration with basic error handling\r\n  register(userData: any): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${this.baseUrl}/register`, userData)\r\n      .pipe(\r\n        map(response => {\r\n          if (response && response.user) {\r\n            return { ...response, success: true };\r\n          }\r\n          return { success: false, user: null };\r\n        }),\r\n        catchError(error => {\r\n          console.error('Registration error:', error);\r\n          // Fallback for development - simulate successful registration\r\n          if (error.status === 0) {\r\n            const mockUser = {\r\n              id: Date.now(), // Simple ID generation\r\n              username: userData.username,\r\n              email: userData.email,\r\n              roles: ['USER']\r\n            };\r\n            return of({ success: true, user: mockUser, token: 'mock-token' });\r\n          }\r\n          return of({ success: false, user: null });\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): void {\r\n    this.clearStoredData();\r\n    this.currentUserSubject.next(null);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return localStorage.getItem(this.isLoggedInKey) === 'true';\r\n  }\r\n\r\n  getCurrentUser(): any {\r\n    const user = localStorage.getItem(this.userKey);\r\n    try {\r\n      return user ? JSON.parse(user) : null;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  setAuthData(response: AuthResponse): void {\r\n    if (response.success && response.user) {\r\n      localStorage.setItem(this.isLoggedInKey, 'true');\r\n      localStorage.setItem(this.userKey, JSON.stringify(response.user));\r\n      this.currentUserSubject.next(response.user);\r\n    }\r\n  }\r\n\r\n  private clearStoredData(): void {\r\n    localStorage.removeItem(this.isLoggedInKey);\r\n    localStorage.removeItem(this.userKey);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Book {\r\n  id?: number;\r\n  title: string;\r\n  author: string;\r\n  publishedDate?: Date;\r\n  status?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookService {\r\n  private baseUrl = '/api/books';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllBooks(): Observable<Book[]> {\r\n    return this.http.get<Book[]>(this.baseUrl);\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book> {\r\n    return this.http.get<Book>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  createBook(book: Book): Observable<Book> {\r\n    return this.http.post<Book>(this.baseUrl, book);\r\n  }\r\n\r\n  updateBook(id: number, book: Book): Observable<Book> {\r\n    return this.http.put<Book>(`${this.baseUrl}/${id}`, book);\r\n  }\r\n\r\n  deleteBook(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Book } from './book.service';\r\nimport { Member } from './member.service';\r\n\r\nexport interface Loan {\r\n  id?: number;\r\n  book: Book;\r\n  member: Member;\r\n  loanDate: Date;\r\n  dueDate: Date;\r\n  returnDate?: Date;\r\n  status: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoanService {\r\n  private baseUrl = '/api/loans';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllLoans(): Observable<Loan[]> {\r\n    return this.http.get<Loan[]>(this.baseUrl);\r\n  }\r\n\r\n  getLoanById(id: number): Observable<Loan> {\r\n    return this.http.get<Loan>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  createLoan(loan: any): Observable<Loan> {\r\n    return this.http.post<Loan>(this.baseUrl, loan);\r\n  }\r\n\r\n  updateLoan(id: number, loan: any): Observable<Loan> {\r\n    return this.http.put<Loan>(`${this.baseUrl}/${id}`, loan);\r\n  }\r\n\r\n  returnBook(id: number): Observable<Loan> {\r\n    return this.http.put<Loan>(`${this.baseUrl}/${id}/return`, {});\r\n  }\r\n\r\n  deleteLoan(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Member {\r\n  id?: number;\r\n  name: string;\r\n  email: string;\r\n  roles?: any[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MemberService {\r\n  private baseUrl = '/api/members';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllMembers(): Observable<Member[]> {\r\n    return this.http.get<Member[]>(this.baseUrl);\r\n  }\r\n\r\n  getMemberById(id: number): Observable<Member> {\r\n    return this.http.get<Member>(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  createMember(member: Member): Observable<Member> {\r\n    return this.http.post<Member>(this.baseUrl, member);\r\n  }\r\n\r\n  updateMember(id: number, member: Member): Observable<Member> {\r\n    return this.http.put<Member>(`${this.baseUrl}/${id}`, member);\r\n  }\r\n\r\n  deleteMember(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","LoginComponent","RegisterComponent","DashboardComponent","BookListComponent","BookFormComponent","MemberListComponent","MemberFormComponent","LoanListComponent","LoanFormComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","exports","i0","AppComponent","constructor","authService","router","logout","navigate","selectors","decls","vars","consts","template","BrowserModule","FormsModule","HttpClientModule","AuthService","BookService","MemberService","LoanService","AppModule","bootstrap","declarations","bookService","title","author","ngOnInit","loadBooks","isLoading","getAllBooks","subscribe","next","books","filterBooks","error","console","showMessage","filteredBooks","filter","book","matchesSearch","searchTerm","toLowerCase","includes","matchesStatus","statusFilter","status","openAddForm","currentBook","publishedDateString","isEditMode","showForm","clearMessage","editBook","publishedDate","Date","toISOString","split","closeForm","saveBook","isSubmitting","operation","updateBook","id","createBook","deleteBook","confirm","getStatusClass","message","type","messageType","setTimeout","ctx","currentUser","getCurrentUser","loanService","memberService","bookId","memberId","setMinDate","loadLoans","loadMembers","loadAvailableBooks","today","minDate","defaultDue","setDate","getDate","dueDateString","getAllLoans","loans","filterLoans","availableBooks","getAllMembers","members","filteredLoans","loan","bookTitle","memberName","member","name","newLoan","saveLoan","loanData","parseInt","dueDate","createLoan","returnBook","deleteLoan","getDaysLeft","diffTime","getTime","diffDays","Math","ceil","abs","getDaysLeftClass","username","password","onSubmit","errorMessage","successMessage","credentials","login","response","success","setAuthData","email","filterMembers","filteredMembers","currentMember","editMember","saveMember","updateMember","createMember","deleteMember","userData","register","isAuthenticated","log","factory","providedIn","BehaviorSubject","map","catchError","of","http","currentUserSubject","asObservable","isLoggedIn","localStorage","getItem","isLoggedInKey","user","userKey","JSON","parse","e","clearStoredData","post","baseUrl","pipe","mockUser","roles","token","now","setItem","stringify","removeItem","get","getBookById","put","delete","getLoanById","updateLoan","getMemberById","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}